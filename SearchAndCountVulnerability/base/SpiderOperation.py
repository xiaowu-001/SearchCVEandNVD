from bs4 import BeautifulSoup
from requests.utils import requote_uri
from urllib.request import urlopen
import WebsIteHandle.Config_Setting as UserConfig
import re

#爬虫获取CVE数据 by wu_t2 2022-08-01
def serchCVEinfo(cve_url, cveid):
    url_U = requote_uri(cve_url)
    print(url_U)
    try:
        page = urlopen(url_U)
        content = page.read().decode("utf-8")
        soup1 = BeautifulSoup(content, 'html.parser')
        all_info = soup1.find('div', {'id':'GeneratedTable'})
        #获取描述（漏洞影响）
        Vul_descript = all_info.find('td', {'colspan' : '2'}).text
        # print(Vul_descript)
        # 获取漏洞发布时间
        tmp_releasedate = all_info.find('b', text=re.compile('2')).text
        Vul_releasedate = tmp_releasedate[0:4] + "-" + tmp_releasedate[4:6] + "-" + tmp_releasedate[6:8]
        # 获取漏洞最近修改时间
        if all_info.find('td', {'colspan' : '2'}, text=re.compile("Assigned")) is not None:
            tmp_Updatedate = all_info.find('td', {'colspan' : '2'}, text=re.compile("Assigned")).text
            tmp_Updatedate = tmp_Updatedate[tmp_Updatedate.find('2'):tmp_Updatedate.find(')')]
            Vul_Updatedate = tmp_Updatedate[0:4] + "-" + tmp_Updatedate[4:6] + "-" + tmp_Updatedate[6:8]
        else:
            Vul_Updatedate = UserConfig.OSSVUL_VULNERABILITYUPDATETIME_DEFAULT
        if len(Vul_Updatedate) == 0:
            Vul_Updatedate = UserConfig.OSSVUL_VULNERABILITYUPDATETIME_DEFAULT
        # Vul_risklevel = soup1.find('a', {'class': 'label label-critical'}).text
        # print(Vul_Updatedate)
        #漏洞公告（补丁链接）
        Vul_refer = ''
        ul_info = all_info.find('ul')
        if ul_info.find_all('li') is not None:
            Vul_refer_all = ul_info.find_all('li')
            for refer_info in Vul_refer_all:
                if refer_info.text not in Vul_refer:
                    Vul_refer = Vul_refer  + refer_info.text + '\n'
        else:
            Vul_refer = UserConfig.OSSVUL_VULNERABILITYNOTICE_DEFAULT
        if len(Vul_refer) == 0:
            Vul_refer = UserConfig.OSSVUL_VULNERABILITYNOTICE_DEFAULT

        list = [UserConfig.OSSVUL_VULNERABILITYNAME_DEFAULT, cveid, UserConfig.OSSVUL_VULNERABILITYCNVDID_DEFAULT,
                UserConfig.OSSVUL_VULNERABILITYCNNVDID_DEFAULT, UserConfig.OSSVUL_VULNERABILITYRISK_DEFAULT,
                Vul_descript, Vul_releasedate, Vul_Updatedate, Vul_refer,
                UserConfig.OSSVUL_VULNERABILITYTYPE_DEFAULT, UserConfig.OSSVUL_VULNERABILITYTHREAT_DEFAULT]
        # print(list)
        return list
    except:
        print("该网址" + url_U +"无法访问")
        pass

#爬虫获取NVD数据 by wu_t2 2022-08-01
def serchNVDinfo(nvd_url, cveid):
    url_U = requote_uri(nvd_url)
    print(url_U)
    try:
        page = urlopen(url_U)
        content = page.read().decode("utf-8")
        soup1 = BeautifulSoup(content, 'html.parser')
        #获取描述（漏洞影响）
        Vul_descript = soup1.find('p', {'data-testid':'vuln-description'}).text
        # print(Vul_descript)
        #获取漏洞等级
        if(soup1.find('a', {'data-testid': 'vuln-cvss3-panel-score'}) is not None):
            Vul_risklevel= soup1.find('a', {'data-testid': 'vuln-cvss3-panel-score'}).text
        else:
            Vul_risklevel = UserConfig.OSSVUL_VULNERABILITYRISK_DEFAULT
        # print(Vul_risklevel)
        # 获取漏洞发布时间
        tmp_releasedate = soup1.find('span', {'data-testid': 'vuln-published-on'}).text
        Vul_releasedate = tmp_releasedate[6:10] + "-" + tmp_releasedate[0:2] + "-" + tmp_releasedate[3:5]
        # 获取漏洞最近修改时间
        tmp_Updatedate = soup1.find('span', {'data-testid': 'vuln-last-modified-on'}).text
        if len(tmp_Updatedate) == 0:
            Vul_Updatedate = UserConfig.OSSVUL_VULNERABILITYUPDATETIME_DEFAULT
        else:
            Vul_Updatedate = tmp_Updatedate[6:10] + "-" + tmp_Updatedate[0:2] + "-" + tmp_Updatedate[3:5]
        # Vul_risklevel = soup1.find('a', {'class': 'label label-critical'}).text
        # print(Vul_Updatedate)
        #漏洞公告（补丁链接）
        referlink = 'vuln-hyperlinks-link-'
        i = 0
        link = referlink + str(i)
        Vul_refer = ''
        while soup1.find('td', {'data-testid': link}) is not None:
            Vul_refer = Vul_refer + '\n' + soup1.find('td', {'data-testid': link}).text
            i = i + 1
            link = referlink + str(i)
        if len(Vul_refer) == 0:
            Vul_refer = UserConfig.OSSVUL_VULNERABILITYNOTICE_DEFAULT

        list = [UserConfig.OSSVUL_VULNERABILITYNAME_DEFAULT, cveid, UserConfig.OSSVUL_VULNERABILITYCNVDID_DEFAULT,
                UserConfig.OSSVUL_VULNERABILITYCNNVDID_DEFAULT, Vul_risklevel, Vul_descript, Vul_releasedate, Vul_Updatedate,
                Vul_refer, UserConfig.OSSVUL_VULNERABILITYTYPE_DEFAULT, UserConfig.OSSVUL_VULNERABILITYTHREAT_DEFAULT]
        return list
    except:
        print("该网址" + url_U +"无法访问")
        pass