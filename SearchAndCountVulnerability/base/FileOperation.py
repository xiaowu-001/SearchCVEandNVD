import openpyxl
from datetime import datetime
import WebsIteHandle.Config_Setting as UserConfig
from openpyxl.styles import PatternFill

# current time
time = datetime.now()

#具体的读取操作 by wu_t2 2022-08-01
def getlibinfo(sheet, row):
    lib_product_name = sheet.cell(row, UserConfig.FOSSPRODUCTNAME_COL).value
    lib_name = sheet.cell(row, UserConfig.FOSSNAME_COL).value
    lib_verion = sheet.cell(row, UserConfig.FOSSNAMEVERSION_COL).value
    lib_link = sheet.cell(row, UserConfig.FOSSNAMELINK_COL).value
    lib_license = sheet.cell(row, UserConfig.FFOSSNAMELICENSE_COL).value
    lib_linklicense = sheet.cell(row, UserConfig.FOSSNAMELICENSELINK_COL).value
    lib_copyright = sheet.cell(row, UserConfig.FOSSNAMECOPYRIGHT_COL).value
    lib_usage = sheet.cell(row, UserConfig.FOSSNAMEUSAGE_COL).value
    lib_tyeoflink = sheet.cell(row, UserConfig.FOSSNAMETYPEOFLINK_COL).value
    lib_info_list = [lib_product_name, lib_name, lib_verion, lib_link, lib_license, lib_linklicense, lib_copyright, lib_usage, lib_tyeoflink]
    return lib_info_list

#读出FOSS中的外部库数据 by wu_t2 2022-08-01
def readlibname(name):

    table = openpyxl.load_workbook(name)
    FOSS_sheet = table[UserConfig.FOSSSHEET_NAME]
    lib_info = getlibinfo(FOSS_sheet, UserConfig.FOSSDATASTART_RAW)

    lib_list = []
    i = 0
    while lib_info[0] is not None:
        lib_list.append(lib_info)
        i = i+1
        lib_info = getlibinfo(FOSS_sheet, UserConfig.FOSSDATASTART_RAW + i)
    return lib_list

#查重CVE号以及更新时间或者发布时间 by wu_t2 2022-08-01
def Vul_Duplicatecheck(cveid_src, cveid_dst, last_time_src, last_time_dst):
    if cveid_src == cveid_dst:
        time_month = int(last_time_src[5:7], 10)
        time_day = int(last_time_src[8:10], 10)
        time_year = int(last_time_src[0:4], 10)
        lasttime_src = datetime(time_year, time_month, time_day)
        time_month = int(last_time_dst[5:7], 10)
        time_day = int(last_time_dst[8:10], 10)
        time_year = int(last_time_dst[0:4], 10)
        lasttime_dst = datetime(time_year, time_month, time_day)
        time_compare = (lasttime_dst - lasttime_src).days
        if time_compare > 0:
            return bool(1)
        else:
            return bool(0)
    else:
        return bool(0)

#写入漏洞数据 by wu_t2 2022-08-01
def writeVulinfo(file_name, lib_info, vul_info, source_from):
    writexl = openpyxl.load_workbook(file_name)
    sheet = writexl[UserConfig.OSSVULSHEET_NAME]
    i = 3
    isolddata = bool(0)
    # 查重更新，可能需要标记个红色
    while sheet.cell(i, UserConfig.OSSVULNUMBER_COL).value is not None:
        cveid_src = sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCVEID_COL).value
        if sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYUPDATETIME_COL).value == "no Update time":
            last_time_src = sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYRELEASETIME_COL).value
        else:
            last_time_src = sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYUPDATETIME_COL).value
        cveid_dst = vul_info[1]
        if vul_info[7] == "no Update time":
            last_time_dst = vul_info[6]
        else:
            last_time_dst = vul_info[7]
        if Vul_Duplicatecheck(cveid_src, cveid_dst, last_time_src, last_time_dst):
            fille = PatternFill("solid", fgColor="FF0000")
            sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCVEID_COL).fill = fille
            break
        else:
            #若鉴别不是最新的信息，1如果是CVE和NVD检索的跳出写入,2原来数据是CVE必定重写，否则时间相同重写数据
            if cveid_src == cveid_dst:
                if source_from != "CVE" and source_from != "NVD" and last_time_src == last_time_dst:
                    isolddata = bool(0)
                    fille = PatternFill("solid", fgColor="FF0000")
                    sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCVEID_COL).fill = fille
                    print("检测到重复，数据重写")
                    break
                elif sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYSOURCE_COL).value == "CVE" and last_time_src == last_time_dst:
                    isolddata = bool(0)
                    fille = PatternFill("solid", fgColor="FF0000")
                    sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCVEID_COL).fill = fille
                    print("检测到重复，数据重写")
                    break
                else:
                    isolddata = bool(1)
                    print("检测到重复" + cveid_src + "，但不是最新的")
                    print(lib_info[1])
                    break
            i = i+1
    if isolddata == bool(0):
        sheet.cell(i, UserConfig.OSSVULNUMBER_COL).value = i-2
        sheet.cell(i, UserConfig.OSSVULCURRENTTIME_COL).value = time.strftime('%Y-%m-%d')
        sheet.cell(i, UserConfig.OSSVULPRODUCTNAME_COL).value = lib_info[0]  #产品名称
        sheet.cell(i, UserConfig.OSSVULNAME_COL).value = lib_info[1]  #组件名称
        sheet.cell(i, UserConfig.OSSVULNAMEVERSION_COL).value = lib_info[2]  #组件版本
        sheet.cell(i, UserConfig.OSSVULNAMELINK_COL).value = lib_info[3]  #组件链接
        sheet.cell(i, UserConfig.OSSVULNAMELICENSE_COL).value = lib_info[4]  #许可
        sheet.cell(i, UserConfig.OSSVULNAMELICENSELINK_COL).value = lib_info[5]  #许可链接
        sheet.cell(i, UserConfig.OSSVULNAMECOPYRIGHT_COL).value = lib_info[6]  #版本信息
        sheet.cell(i, UserConfig.OSSVULNAMEUSAGE_COL).value = lib_info[7]  #使用类型
        sheet.cell(i, UserConfig.OSSVULNAMETYPEOFLINK_COL).value = lib_info[8]  #使用链接方式
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYNAME_COL).value = vul_info[0]  # 漏洞名称
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYSOURCE_COL).value = source_from
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCVEID_COL).value = vul_info[1]  #CVEID
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCNVDID_COL).value = vul_info[2]  #CNVDID
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYCNNVDID_COL).value = vul_info[3]  #CNNVDID
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYRISK_COL).value = vul_info[4]  #漏洞风险
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYDESCRIB_COL).value = vul_info[5]  #漏洞描述
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYRELEASETIME_COL).value = vul_info[6]  #发布时间
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYUPDATETIME_COL).value = vul_info[7]  #更新时间
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYNOTICE_COL).value = vul_info[8]  #补丁公告
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYTYPE_COL).value = vul_info[9]  #漏洞类型
        sheet.cell(i, UserConfig.OSSVUL_VULNERABILITYTHREAT_COL).value = vul_info[10] #威胁类型
        writexl.save(file_name)

#检查更新时间跨度 by wu_t2 2022-08-01
def CheckUpdateTime(Vulinfo):
    tmptime = Vulinfo[7]
    if tmptime != UserConfig.OSSVUL_VULNERABILITYUPDATETIME_DEFAULT:
        time_month = int(tmptime[5:7], 10)
        time_day = int(tmptime[8:10], 10)
        time_year = int(tmptime[0:4], 10)
        Updatetime = datetime(time_year, time_month, time_day)
        return (time - Updatetime).days
    else:
        tmptime = Vulinfo[6]
        time_month = int(tmptime[5:7], 10)
        time_day = int(tmptime[8:10], 10)
        time_year = int(tmptime[0:4], 10)
        Updatetime = datetime(time_year, time_month, time_day)
        return (time - Updatetime).days
